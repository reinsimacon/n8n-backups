{
  "active": false,
  "connections": {
    "Email Trigger (IMAP)": {
      "main": [
        [
          {
            "node": "Check Attachments",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Attachments": {
      "main": [
        [
          {
            "node": "Extract First Name",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract First Name1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Extract First Name": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract First Name1": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-02T06:14:12.513Z",
  "id": "Zbc8Owr0kYARrYQd",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "AI-Agent Mailcow (comfac-it)",
  "nodes": [
    {
      "parameters": {
        "postProcessAction": "nothing",
        "format": "resolved",
        "options": {}
      },
      "type": "n8n-nodes-base.emailReadImap",
      "typeVersion": 2,
      "position": [
        -1100,
        -360
      ],
      "id": "7fe4ef79-ecb3-4c2b-8041-23c1129bf02c",
      "name": "Email Trigger (IMAP)",
      "credentials": {
        "imap": {
          "id": "UIfYVgUrFbBRaDY0",
          "name": "internship@comfac-it.com(IMAP)"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b8ac9cee-e7e2-4cee-af8d-ddbe793fc99c",
              "leftValue": "={{ $('Email Trigger (IMAP)').item.binary.attachment_0 }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4dac86f1-73c9-446e-9cd2-f75371673ca9",
      "name": "Check Attachments",
      "type": "n8n-nodes-base.if",
      "position": [
        -660,
        -200
      ],
      "notesInFlow": true,
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=# Role  \nYou are the Internship Admin.\n\n# Capabilities  \n- Write plain-text replies only  \n- Greet using the sender's first name  \n- Acknowledge CV/resume attachments  \n- Recognize interview schedules and give reminders to bring printed CV  \n- Always include:  \n  ‚Ä¢ Interview Availability  \n  ‚Ä¢ Internship scope summary  \n  ‚Ä¢ Contact list for departments  \n  ‚Ä¢ Document and signing instructions  \n  ‚Ä¢ Automated reply footer\n\n# Output Rules  \n- Use line breaks between greeting, body, and signature  \n- End message with: _This is an automated reply, thank you._  \n- Do NOT include signatures like ‚Äúsent via n8n‚Äù\n\n# Footer  \nThis is an automated reply, thank you.\n\nRegards,  \nRein Simacon  \nCornersteel Systems Corporation  \nSystems Administrator\n",
        "options": {
          "systemMessage": "=You are the Internship Admin. Write a professional email response to the sender below. They are applying for an internship, and they have attached their CV.\n\nGuidelines:\n- Greet them using their first name: `Hello {{firstName}},`\n- Maintain a polite, professional tone.\n- Acknowledge the receipt of the attached CV/resume.\n- If a visit or interview time is mentioned, acknowledge it and remind them to bring a printed copy of their CV.\n- Always include Admin‚Äôs availability:\n\nMon‚ÄìWed: 11:00 AM ‚Äì 12:00 PM and 2:00 PM ‚Äì 5:00 PM  \nThu‚ÄìFri: Anytime  \nSat‚ÄìSun: Not available\n\n- End the message with:  \n  This is an automated reply, thank you.\n- Return only plain-text output with line breaks between sections.\n\nInclude the following internship information:\n\nThanks for applying. The Comfac/Cornersteel internship program covers:\n\n- Office Tools & Management: LibreOffice, Microsoft 365, document control  \n- ERPNext & Frappe: Cloud ERP system training & deployment  \n- Nextcloud: Self-hosted file collaboration (Docs, Sheets, Presentations)  \n- IT Infrastructure: pfSense, WireGuard VPN, Home Assistant, PLCs  \n- Development: Open-source tools, AI coding assistants, CI/CD  \n- Project Management & Systems Integration  \n- Sovereign Tech: Prioritizing local control and resilience over foreign cloud platforms  \n- No Allowances unless on special assigned projects  \n\nNext Steps: Schedule your interview or visit:  \nüìç 536 Calbayog St, Mandaluyong (9:00 AM‚Äì2:00 PM)  \nüìû Call department contacts for faster coordination.  \n\nContacts:  \nIT ‚Äì Edmund: 09235877287  \nSysAdmin ‚Äì Rein: 09219852811, Chris: 09469562531, Jao: 09457731981, Carl: 09765697346  \nERP ‚Äì Macy: 09560815855, Christian: 09764335706  \nAI/ML ‚Äì Rafael: 09614351902  \nCom-Eng ‚Äì RJ: 09173339852, Andrei: 09214820109  \nLaguna ‚Äì Mike: 09228099384  \n\nBring: Internship agreement (or use our [template](https://docs.google.com/document/d/13h6FrKpaKSej721OgHHHC5myXvUh5N8EPymN4XBeXMw/edit?usp=sharing)).  \nSigning: Wednesdays 11 AM‚Äì12 PM or list Edmund as signer.  \nMap: https://goo.gl/maps/Ux25cKkBk2rDAf586\n\nThis is an automated reply, thank you.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -220,
        -500
      ],
      "id": "373dc959-9b5f-4d90-910d-6492f35202cc",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -132,
        -280
      ],
      "id": "a414019c-e4bc-4505-9cec-d70966933b9a",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "ASKNtk66h4eMwYob",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "//const emailBody = $node[\"Gmail Trigger\"].json.text || \"\";\nconst emailBody = $input.first().json.text\n// Try to extract a name from common intro phrases\nconst nameMatch = emailBody.match(/(?:my name is|i am|i‚Äôm)\\s+([A-Z][a-z]+(?:\\s+[A-Z][a-z]+)?)/i);\n\n// Default fallback if name is not found\nconst firstName = nameMatch ? nameMatch[1].split(\" \")[0] : \"there\";\n\nreturn {\n  json: {\n    firstName,\n  },\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -440,
        -400
      ],
      "id": "402e9bfd-1cce-4a50-a5e6-07379807001b",
      "name": "Extract First Name"
    },
    {
      "parameters": {
        "fromEmail": "={{ $('Check Attachments').item.json.to.value[0].address }}",
        "toEmail": "={{ $('Check Attachments').item.json.from.value[0].address }}",
        "subject": "=Re: {{ $('Email Trigger (IMAP)').item.json.subject }}",
        "emailFormat": "text",
        "text": "={{ $json.output }}",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        156,
        -200
      ],
      "id": "cf1a13f4-c6e4-4c17-a25a-3239f796c0ab",
      "name": "Send Email",
      "webhookId": "3609cdae-1050-46d9-b0b2-9d8afd386967",
      "credentials": {
        "smtp": {
          "id": "GVO8L2ZgqhG3Lbew",
          "name": "internship@comfac-it.com(SMTP)"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are the Internship Admin. Write a professional reply to the email content below.\n\nGuidelines:\n- Greet using the sender‚Äôs first name.\n- Use a professional and polite tone.\n- If the email is not about internship applications, clarify that this email is used for internship coordination. If they are interested, ask them to send their CV and other requirements.\n- If attachments are missing or no CV/resume is found, ask the sender to send it.\n- If a visit/interview time is mentioned, acknowledge it and remind them to bring a printed copy of their CV.\n- Always include Admin availability:\n\nMon‚ÄìWed: 11:00 AM ‚Äì 12:00 PM and 2:00 PM ‚Äì 5:00 PM  \nThu‚ÄìFri: Anytime  \nSat‚ÄìSun: Not available\n\n- End the message with:  \n  This is an automated reply, thank you.\n- Format with line breaks between greeting, body, and closing.\n- Return plain text output only.\n\nInclude this internship information:\n\nThanks for your interest. The internship program includes:\n\n- Office Suite & ERPNext Training  \n- LibreOffice, Nextcloud, and productivity tools  \n- Firewall (pfSense), VPNs, containerization  \n- Open-source dev tools & AI-assisted coding  \n- Sovereign tech approach to self-hosting  \n- Note: No allowance unless on special assigned projects.\n\nSchedule Interview / Visit:  \nüìç 536 Calbayog St, Mandaluyong (9:00 AM‚Äì2:00 PM)  \nüìû Call relevant contacts for coordination.\n\nKey Contacts:  \nIT ‚Äì Edmund: 09235877287  \nSysAdmin ‚Äì Rein: 09219852811  \nERP ‚Äì Macy: 09560815855  \nAI ‚Äì Rafael: 09614351902  \nLaguna ‚Äì Mike: 09228099384  \n\nRequired: Send your CV and bring an internship agreement (or use our [template](https://docs.google.com/document/d/13h6FrKpaKSej721OgHHHC5myXvUh5N8EPymN4XBeXMw/edit?usp=sharing)).  \nSigning: Wednesdays 11 AM‚Äì12 PM or list Edmund as signer.  \nMap: https://goo.gl/maps/Ux25cKkBk2rDAf586\n\nThis is an automated reply, thank you.\n",
        "options": {
          "systemMessage": "=# Role  \nYou assist the Internship Admin by replying to new inquiries.\n\n# Capabilities  \n- Write clear, plain-text replies  \n- Acknowledge if CV/resume is missing and request it  \n- Detect if the email is not about internships and provide redirection  \n- Detect intent (internship, interview, question)  \n- Recognize visit times and provide interview reminders  \n- Always include:\n  ‚Ä¢ Admin availability  \n  ‚Ä¢ Summary of internship scope  \n  ‚Ä¢ Contacts per department  \n  ‚Ä¢ Document checklist  \n  ‚Ä¢ ‚ÄúThis is an automated reply‚Äù line\n\n# Output Rules  \n- Use line breaks between greeting, body, and closing  \n- End message with: _This is an automated reply, thank you._  \n- Do not use HTML or markdown  \n- No tool-generated footers like ‚Äúsent via n8n‚Äù\n\n# Sample Ending  \nThis is an automated reply, thank you.\n\nRegards,  \nRein Simacon  \nCornersteel Systems Corporation  \nSystems Administrator\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -220,
        0
      ],
      "id": "a8291577-9496-43b1-a6c4-40f267752cb3",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "jsCode": "//const emailBody = $node[\"Gmail Trigger\"].json.text || \"\";\nconst emailBody = $input.first().json.text\n// Try to extract a name from common intro phrases\nconst nameMatch = emailBody.match(/(?:my name is|i am|i‚Äôm)\\s+([A-Z][a-z]+(?:\\s+[A-Z][a-z]+)?)/i);\n\n// Default fallback if name is not found\nconst firstName = nameMatch ? nameMatch[1].split(\" \")[0] : \"there\";\n\nreturn {\n  json: {\n    firstName,\n  },\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -440,
        0
      ],
      "id": "63c0b1df-1c24-4ac1-bef2-2dc601e7c9d8",
      "name": "Extract First Name1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -132,
        220
      ],
      "id": "3ab847e8-213e-4174-a291-22c555a281c3",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "ASKNtk66h4eMwYob",
          "name": "OpenAi account"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-06-27T03:53:10.093Z",
      "updatedAt": "2025-06-27T03:53:10.093Z",
      "id": "AiEsGFwNfKxCHLlu",
      "name": "development"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-07-07T02:00:46.000Z",
  "versionId": "aa8468a3-a83d-4636-942f-92cc134409e2"
}